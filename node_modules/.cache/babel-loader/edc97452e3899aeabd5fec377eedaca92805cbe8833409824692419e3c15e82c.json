{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\react\\\\first-app\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.js\";\nimport Chart from \"../Charts/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesChart = props => {\n  let ChartDataPoints;\n  if (props.chosenYear === \"All\") {\n    ChartDataPoints = [{\n      label: \"2019\",\n      value: 0\n    }, {\n      label: \"2020\",\n      value: 0\n    }, {\n      label: \"2021\",\n      value: 0\n    }, {\n      label: \"2022\",\n      value: 0\n    }, {\n      label: \"2023\",\n      value: 0\n    }];\n    let amount2021 = 0;\n    let totalAmount = 0;\n    for (const expense of props.allExpenses) {\n      if (expense.date.getFullYear() === 2021) amount2021 += expense.amount;else totalAmount += expense.amount;\n      // console.log(expense.date.getFullYear());\n    }\n\n    console.log(props.allExpenses);\n    console.log(totalAmount);\n  } else {\n    ChartDataPoints = [{\n      label: \"Jan\",\n      value: 0\n    }, {\n      label: \"Feb\",\n      value: 0\n    }, {\n      label: \"Mar\",\n      value: 0\n    }, {\n      label: \"Apr\",\n      value: 0\n    }, {\n      label: \"May\",\n      value: 0\n    }, {\n      label: \"Jun\",\n      value: 0\n    }, {\n      label: \"Jul\",\n      value: 0\n    }, {\n      label: \"Aug\",\n      value: 0\n    }, {\n      label: \"Sep\",\n      value: 0\n    }, {\n      label: \"Oct\",\n      value: 0\n    }, {\n      label: \"Nov\",\n      value: 0\n    }, {\n      label: \"Dec\",\n      value: 0\n    }];\n    for (const expense of props.yearExpenses) {\n      const expenseMonth = expense.date.getMonth();\n      ChartDataPoints[expenseMonth].value += expense.amount;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: ChartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};\n_c = ExpensesChart;\nexport default ExpensesChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["Chart","jsxDEV","_jsxDEV","ExpensesChart","props","ChartDataPoints","chosenYear","label","value","amount2021","totalAmount","expense","allExpenses","date","getFullYear","amount","console","log","yearExpenses","expenseMonth","getMonth","dataPoints","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/react/first-app/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import Chart from \"../Charts/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  let ChartDataPoints;\r\n  if (props.chosenYear === \"All\") {\r\n    ChartDataPoints = [\r\n      { label: \"2019\", value: 0 },\r\n      { label: \"2020\", value: 0 },\r\n      { label: \"2021\", value: 0 },\r\n      { label: \"2022\", value: 0 },\r\n      { label: \"2023\", value: 0 },\r\n    ];\r\n    let amount2021 = 0;\r\n    let totalAmount = 0;\r\n    for (const expense of props.allExpenses) {\r\n      if (expense.date.getFullYear() === 2021) amount2021 += expense.amount;\r\n      else totalAmount += expense.amount;\r\n      // console.log(expense.date.getFullYear());\r\n    }\r\n    console.log(props.allExpenses);\r\n    console.log(totalAmount);\r\n  } else {\r\n    ChartDataPoints = [\r\n      { label: \"Jan\", value: 0 },\r\n      { label: \"Feb\", value: 0 },\r\n      { label: \"Mar\", value: 0 },\r\n      { label: \"Apr\", value: 0 },\r\n      { label: \"May\", value: 0 },\r\n      { label: \"Jun\", value: 0 },\r\n      { label: \"Jul\", value: 0 },\r\n      { label: \"Aug\", value: 0 },\r\n      { label: \"Sep\", value: 0 },\r\n      { label: \"Oct\", value: 0 },\r\n      { label: \"Nov\", value: 0 },\r\n      { label: \"Dec\", value: 0 },\r\n    ];\r\n    for (const expense of props.yearExpenses) {\r\n      const expenseMonth = expense.date.getMonth();\r\n      ChartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n  }\r\n  return <Chart dataPoints={ChartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/B,IAAIC,eAAe;EACnB,IAAID,KAAK,CAACE,UAAU,KAAK,KAAK,EAAE;IAC9BD,eAAe,GAAG,CAChB;MAAEE,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC3B;MAAED,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC3B;MAAED,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC3B;MAAED,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC3B;MAAED,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAE,CAAC,CAC5B;IACD,IAAIC,UAAU,GAAG,CAAC;IAClB,IAAIC,WAAW,GAAG,CAAC;IACnB,KAAK,MAAMC,OAAO,IAAIP,KAAK,CAACQ,WAAW,EAAE;MACvC,IAAID,OAAO,CAACE,IAAI,CAACC,WAAW,CAAC,CAAC,KAAK,IAAI,EAAEL,UAAU,IAAIE,OAAO,CAACI,MAAM,CAAC,KACjEL,WAAW,IAAIC,OAAO,CAACI,MAAM;MAClC;IACF;;IACAC,OAAO,CAACC,GAAG,CAACb,KAAK,CAACQ,WAAW,CAAC;IAC9BI,OAAO,CAACC,GAAG,CAACP,WAAW,CAAC;EAC1B,CAAC,MAAM;IACLL,eAAe,GAAG,CAChB;MAAEE,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,CAC3B;IACD,KAAK,MAAMG,OAAO,IAAIP,KAAK,CAACc,YAAY,EAAE;MACxC,MAAMC,YAAY,GAAGR,OAAO,CAACE,IAAI,CAACO,QAAQ,CAAC,CAAC;MAC5Cf,eAAe,CAACc,YAAY,CAAC,CAACX,KAAK,IAAIG,OAAO,CAACI,MAAM;IACvD;EACF;EACA,oBAAOb,OAAA,CAACF,KAAK;IAACqB,UAAU,EAAEhB;EAAgB;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/C,CAAC;AAACC,EAAA,GAxCIvB,aAAa;AA0CnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
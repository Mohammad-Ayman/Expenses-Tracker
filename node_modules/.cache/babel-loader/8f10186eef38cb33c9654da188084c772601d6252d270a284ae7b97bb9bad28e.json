{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\react\\\\first-app\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport DisplayExpenses from \"./DisplayExpenses\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./style/Expenses.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState(\"All\");\n  const [allYear, setAllYear] = useState(props.expensesData);\n  const FilterChangeHandler = selectedYear => {\n    console.log(selectedYear);\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = props.expensesData.filter(expense => expense.date.getFullYear().toString() === filteredYear);\n\n  // setAllYear(props.expensesData);\n  // let allYearsExpenseItems = props.expensesData.map((element) => (\n  //   <ExpenseItem\n  //     key={element.id}\n  //     // key={indexes}\n  //     title={element.title}\n  //     amount={element.amount}\n  //     date={element.date}\n  //   />\n  // ));\n\n  // let filteredExpenseItems = <p>No Expenses found!</p>;\n  // if (filteredExpenses.length) {\n  //   filteredExpenseItems = filteredExpenses.map((expenseData, indexes) => (\n  //     <ExpenseItem\n  //       key={expenseData.id}\n  //       // key={indexes}\n  //       title={expenseData.title}\n  //       amount={expenseData.amount}\n  //       date={expenseData.date}\n  //     />\n  //   ));\n  // }\n\n  // let displayedExpenseItems =\n  //   filteredYear === \"All\" ? allYearsExpenseItems : filteredExpenseItems;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        defaultYear: filteredYear,\n        onFilterChange: FilterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), displayed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"VeZk6t5612vriP5HutuLAVCEMWo=\");\n_c = Expenses;\nexport default Expenses;\n\n/*\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./style/Expenses.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst Expenses = (props) => {\r\n  const initialExpensesItems = props.expensesData.map(\r\n    (expenseData, indexes) => (\r\n      <ExpenseItem\r\n        key={expenseData.id}\r\n        // key={indexes}\r\n        title={expenseData.title}\r\n        amount={expenseData.amount}\r\n        date={expenseData.date}\r\n      />\r\n    )\r\n  );\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const [expenseItems, setExpenseItems] = useState(initialExpensesItems);\r\n\r\n  const FilterChangeHandler = (selectedYear) => {\r\n    console.log(selectedYear);\r\n    const filteredExpenses = props.expensesData.filter(\r\n      (expense) => expense.date.getFullYear().toString() === selectedYear\r\n    );\r\n    console.log(filteredExpenses);\r\n    setFilteredYear(selectedYear);\r\n    setExpenseItems(filteredExpenses);\r\n  };\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          defaultYear={filteredYear}\r\n          onFilterChange={FilterChangeHandler}\r\n        />\r\n        {expenseItems}\r\n        </Card>\r\n        </div>\r\n      );\r\n    };\r\n    \r\n    export default Expenses;\r\n    \r\n    \r\n*/\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["DisplayExpenses","Card","ExpensesFilter","useState","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","allYear","setAllYear","expensesData","FilterChangeHandler","selectedYear","console","log","filteredExpenses","filter","expense","date","getFullYear","toString","children","className","defaultYear","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","displayed","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/react/first-app/src/components/Expenses/Expenses.js"],"sourcesContent":["import DisplayExpenses from \"./DisplayExpenses\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./style/Expenses.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"All\");\r\n  const [allYear, setAllYear] = useState(props.expensesData);\r\n\r\n  const FilterChangeHandler = (selectedYear) => {\r\n    console.log(selectedYear);\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = props.expensesData.filter(\r\n    (expense) => expense.date.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n  // setAllYear(props.expensesData);\r\n  // let allYearsExpenseItems = props.expensesData.map((element) => (\r\n  //   <ExpenseItem\r\n  //     key={element.id}\r\n  //     // key={indexes}\r\n  //     title={element.title}\r\n  //     amount={element.amount}\r\n  //     date={element.date}\r\n  //   />\r\n  // ));\r\n\r\n  // let filteredExpenseItems = <p>No Expenses found!</p>;\r\n  // if (filteredExpenses.length) {\r\n  //   filteredExpenseItems = filteredExpenses.map((expenseData, indexes) => (\r\n  //     <ExpenseItem\r\n  //       key={expenseData.id}\r\n  //       // key={indexes}\r\n  //       title={expenseData.title}\r\n  //       amount={expenseData.amount}\r\n  //       date={expenseData.date}\r\n  //     />\r\n  //   ));\r\n  // }\r\n\r\n  // let displayedExpenseItems =\r\n  //   filteredYear === \"All\" ? allYearsExpenseItems : filteredExpenseItems;\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          defaultYear={filteredYear}\r\n          onFilterChange={FilterChangeHandler}\r\n        />\r\n        {/* <DisplayExpenses\r\n          filteredItems={filteredExpenses}\r\n          allItems={allYear}\r\n          chosenYear={filteredYear}\r\n        /> */}\r\n        {displayed}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n\r\n/*\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./style/Expenses.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst Expenses = (props) => {\r\n  const initialExpensesItems = props.expensesData.map(\r\n    (expenseData, indexes) => (\r\n      <ExpenseItem\r\n        key={expenseData.id}\r\n        // key={indexes}\r\n        title={expenseData.title}\r\n        amount={expenseData.amount}\r\n        date={expenseData.date}\r\n      />\r\n    )\r\n  );\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const [expenseItems, setExpenseItems] = useState(initialExpensesItems);\r\n\r\n  const FilterChangeHandler = (selectedYear) => {\r\n    console.log(selectedYear);\r\n    const filteredExpenses = props.expensesData.filter(\r\n      (expense) => expense.date.getFullYear().toString() === selectedYear\r\n    );\r\n    console.log(filteredExpenses);\r\n    setFilteredYear(selectedYear);\r\n    setExpenseItems(filteredExpenses);\r\n  };\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          defaultYear={filteredYear}\r\n          onFilterChange={FilterChangeHandler}\r\n        />\r\n        {expenseItems}\r\n        </Card>\r\n        </div>\r\n      );\r\n    };\r\n    \r\n    export default Expenses;\r\n    \r\n    \r\n*/\r\n"],"mappings":";;AAAA,OAAOA,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,sBAAsB;AAC7B,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAACI,KAAK,CAACM,YAAY,CAAC;EAE1D,MAAMC,mBAAmB,GAAIC,YAAY,IAAK;IAC5CC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;IACzBL,eAAe,CAACK,YAAY,CAAC;EAC/B,CAAC;EACD,MAAMG,gBAAgB,GAAGX,KAAK,CAACM,YAAY,CAACM,MAAM,CAC/CC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKd,YACzD,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,oBACEJ,OAAA;IAAAmB,QAAA,eACEnB,OAAA,CAACJ,IAAI;MAACwB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACxBnB,OAAA,CAACH,cAAc;QACbwB,WAAW,EAAEjB,YAAa;QAC1BkB,cAAc,EAAEb;MAAoB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,EAMDC,SAAS;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACvB,EAAA,CAvDIF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAyDd,eAAeA,QAAQ;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
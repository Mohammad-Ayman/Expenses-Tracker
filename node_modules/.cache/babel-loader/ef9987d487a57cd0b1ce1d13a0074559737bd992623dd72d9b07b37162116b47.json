{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\react\\\\first-app\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./style/Expenses.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState(\"All\");\n  const FilterChangeHandler = selectedYear => {\n    console.log(selectedYear);\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = props.expensesData.filter(expense => expense.date.getFullYear().toString() === filteredYear);\n  let allYearsExpenseItems = filteredExpenseItems = props.expensesData.map(element => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n    // key={indexes}\n    title: element.title,\n    amount: element.amount,\n    date: element.date\n  }, element.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this));\n  let filteredExpenseItems = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Expenses found!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 30\n  }, this);\n  if (filteredExpenses.length) {\n    filteredExpenseItems = filteredExpenses.map((expenseData, indexes) => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      // key={indexes}\n      title: expenseData.title,\n      amount: expenseData.amount,\n      date: expenseData.date\n    }, expenseData.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this));\n  }\n  let displayedExpenseItems = filteredYear === \"All\" ? allYearsExpenseItems : filteredExpenseItems;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        defaultYear: filteredYear,\n        onFilterChange: FilterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), filteredExpenseItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"PGn17XP2PftNZJhQR0iziugap6M=\");\n_c = Expenses;\nexport default Expenses;\n\n/*\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./style/Expenses.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst Expenses = (props) => {\r\n  const initialExpensesItems = props.expensesData.map(\r\n    (expenseData, indexes) => (\r\n      <ExpenseItem\r\n        key={expenseData.id}\r\n        // key={indexes}\r\n        title={expenseData.title}\r\n        amount={expenseData.amount}\r\n        date={expenseData.date}\r\n      />\r\n    )\r\n  );\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const [expenseItems, setExpenseItems] = useState(initialExpensesItems);\r\n\r\n  const FilterChangeHandler = (selectedYear) => {\r\n    console.log(selectedYear);\r\n    const filteredExpenses = props.expensesData.filter(\r\n      (expense) => expense.date.getFullYear().toString() === selectedYear\r\n    );\r\n    console.log(filteredExpenses);\r\n    setFilteredYear(selectedYear);\r\n    setExpenseItems(filteredExpenses);\r\n  };\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          defaultYear={filteredYear}\r\n          onFilterChange={FilterChangeHandler}\r\n        />\r\n        {expenseItems}\r\n        </Card>\r\n        </div>\r\n      );\r\n    };\r\n    \r\n    export default Expenses;\r\n    \r\n    \r\n*/\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["ExpenseItem","Card","ExpensesFilter","useState","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","FilterChangeHandler","selectedYear","console","log","filteredExpenses","expensesData","filter","expense","date","getFullYear","toString","allYearsExpenseItems","filteredExpenseItems","map","element","title","amount","id","fileName","_jsxFileName","lineNumber","columnNumber","children","length","expenseData","indexes","displayedExpenseItems","className","defaultYear","onFilterChange","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/react/first-app/src/components/Expenses/Expenses.js"],"sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./style/Expenses.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"All\");\r\n\r\n  const FilterChangeHandler = (selectedYear) => {\r\n    console.log(selectedYear);\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = props.expensesData.filter(\r\n    (expense) => expense.date.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n  let allYearsExpenseItems = (filteredExpenseItems = props.expensesData.map(\r\n    (element) => (\r\n      <ExpenseItem\r\n        key={element.id}\r\n        // key={indexes}\r\n        title={element.title}\r\n        amount={element.amount}\r\n        date={element.date}\r\n      />\r\n    )\r\n  ));\r\n\r\n  let filteredExpenseItems = <p>No Expenses found!</p>;\r\n if (filteredExpenses.length) {\r\n    filteredExpenseItems = filteredExpenses.map((expenseData, indexes) => (\r\n      <ExpenseItem\r\n        key={expenseData.id}\r\n        // key={indexes}\r\n        title={expenseData.title}\r\n        amount={expenseData.amount}\r\n        date={expenseData.date}\r\n      />\r\n    ));\r\n  }\r\n\r\n  let displayedExpenseItems = filteredYear === \"All\" ? allYearsExpenseItems : filteredExpenseItems;\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          defaultYear={filteredYear}\r\n          onFilterChange={FilterChangeHandler}\r\n        />\r\n        {filteredExpenseItems}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n\r\n/*\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./style/Expenses.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst Expenses = (props) => {\r\n  const initialExpensesItems = props.expensesData.map(\r\n    (expenseData, indexes) => (\r\n      <ExpenseItem\r\n        key={expenseData.id}\r\n        // key={indexes}\r\n        title={expenseData.title}\r\n        amount={expenseData.amount}\r\n        date={expenseData.date}\r\n      />\r\n    )\r\n  );\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const [expenseItems, setExpenseItems] = useState(initialExpensesItems);\r\n\r\n  const FilterChangeHandler = (selectedYear) => {\r\n    console.log(selectedYear);\r\n    const filteredExpenses = props.expensesData.filter(\r\n      (expense) => expense.date.getFullYear().toString() === selectedYear\r\n    );\r\n    console.log(filteredExpenses);\r\n    setFilteredYear(selectedYear);\r\n    setExpenseItems(filteredExpenses);\r\n  };\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          defaultYear={filteredYear}\r\n          onFilterChange={FilterChangeHandler}\r\n        />\r\n        {expenseItems}\r\n        </Card>\r\n        </div>\r\n      );\r\n    };\r\n    \r\n    export default Expenses;\r\n    \r\n    \r\n*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\react\\\\expenses-tracker\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.js\";\nimport Chart from \"../Charts/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesChart = props => {\n  let ChartDataPoints;\n  if (props.chosenYear === \"All\") {\n    ChartDataPoints = [{\n      label: 2019,\n      value: 0\n    }, {\n      label: 2020,\n      value: 0\n    }, {\n      label: 2021,\n      value: 0\n    }, {\n      label: 2022,\n      value: 0\n    }, {\n      label: 2023,\n      value: 0\n    }];\n    for (const expense of props.allExpenses) {\n      for (const ChartDataPoint of ChartDataPoints) {\n        if (expense.date.getFullYear() === ChartDataPoint.label) {\n          ChartDataPoint.value += expense.amount;\n          console.log(ChartDataPoint.value);\n        }\n      }\n    }\n  } else {\n    ChartDataPoints = [{\n      label: \"Jan\",\n      value: 0\n    }, {\n      label: \"Feb\",\n      value: 0\n    }, {\n      label: \"Mar\",\n      value: 0\n    }, {\n      label: \"Apr\",\n      value: 0\n    }, {\n      label: \"May\",\n      value: 0\n    }, {\n      label: \"Jun\",\n      value: 0\n    }, {\n      label: \"Jul\",\n      value: 0\n    }, {\n      label: \"Aug\",\n      value: 0\n    }, {\n      label: \"Sep\",\n      value: 0\n    }, {\n      label: \"Oct\",\n      value: 0\n    }, {\n      label: \"Nov\",\n      value: 0\n    }, {\n      label: \"Dec\",\n      value: 0\n    }];\n    for (const expense of props.yearExpenses) {\n      const expenseMonth = expense.date.getMonth();\n      ChartDataPoints[expenseMonth].value += expense.amount;\n    }\n  }\n  const onClickHandler = e => {\n    console.log(e.target);\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: ChartDataPoints,\n    on: true /*onClick={onClickHandler}*/\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n};\n_c = ExpensesChart;\nexport default ExpensesChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["Chart","jsxDEV","_jsxDEV","ExpensesChart","props","ChartDataPoints","chosenYear","label","value","expense","allExpenses","ChartDataPoint","date","getFullYear","amount","console","log","yearExpenses","expenseMonth","getMonth","onClickHandler","e","target","dataPoints","on","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/react/expenses-tracker/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import Chart from \"../Charts/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  let ChartDataPoints;\r\n  if (props.chosenYear === \"All\") {\r\n    ChartDataPoints = [\r\n      { label: 2019, value: 0 },\r\n      { label: 2020, value: 0 },\r\n      { label: 2021, value: 0 },\r\n      { label: 2022, value: 0 },\r\n      { label: 2023, value: 0 },\r\n    ];\r\n    for (const expense of props.allExpenses) {\r\n      for (const ChartDataPoint of ChartDataPoints) {\r\n        if (expense.date.getFullYear() === ChartDataPoint.label) {\r\n          ChartDataPoint.value += expense.amount;\r\n          console.log(ChartDataPoint.value);\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    ChartDataPoints = [\r\n      { label: \"Jan\", value: 0 },\r\n      { label: \"Feb\", value: 0 },\r\n      { label: \"Mar\", value: 0 },\r\n      { label: \"Apr\", value: 0 },\r\n      { label: \"May\", value: 0 },\r\n      { label: \"Jun\", value: 0 },\r\n      { label: \"Jul\", value: 0 },\r\n      { label: \"Aug\", value: 0 },\r\n      { label: \"Sep\", value: 0 },\r\n      { label: \"Oct\", value: 0 },\r\n      { label: \"Nov\", value: 0 },\r\n      { label: \"Dec\", value: 0 },\r\n    ];\r\n    for (const expense of props.yearExpenses) {\r\n      const expenseMonth = expense.date.getMonth();\r\n      ChartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n  }\r\n  const onClickHandler = (e) => {\r\n    console.log(e.target);\r\n  };\r\n\r\n  return <Chart dataPoints={ChartDataPoints} on /*onClick={onClickHandler}*/ />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/B,IAAIC,eAAe;EACnB,IAAID,KAAK,CAACE,UAAU,KAAK,KAAK,EAAE;IAC9BD,eAAe,GAAG,CAChB;MAAEE,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAE,CAAC,EACzB;MAAED,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAE,CAAC,EACzB;MAAED,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAE,CAAC,EACzB;MAAED,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAE,CAAC,EACzB;MAAED,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAE,CAAC,CAC1B;IACD,KAAK,MAAMC,OAAO,IAAIL,KAAK,CAACM,WAAW,EAAE;MACvC,KAAK,MAAMC,cAAc,IAAIN,eAAe,EAAE;QAC5C,IAAII,OAAO,CAACG,IAAI,CAACC,WAAW,CAAC,CAAC,KAAKF,cAAc,CAACJ,KAAK,EAAE;UACvDI,cAAc,CAACH,KAAK,IAAIC,OAAO,CAACK,MAAM;UACtCC,OAAO,CAACC,GAAG,CAACL,cAAc,CAACH,KAAK,CAAC;QACnC;MACF;IACF;EACF,CAAC,MAAM;IACLH,eAAe,GAAG,CAChB;MAAEE,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1B;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAE,CAAC,CAC3B;IACD,KAAK,MAAMC,OAAO,IAAIL,KAAK,CAACa,YAAY,EAAE;MACxC,MAAMC,YAAY,GAAGT,OAAO,CAACG,IAAI,CAACO,QAAQ,CAAC,CAAC;MAC5Cd,eAAe,CAACa,YAAY,CAAC,CAACV,KAAK,IAAIC,OAAO,CAACK,MAAM;IACvD;EACF;EACA,MAAMM,cAAc,GAAIC,CAAC,IAAK;IAC5BN,OAAO,CAACC,GAAG,CAACK,CAAC,CAACC,MAAM,CAAC;EACvB,CAAC;EAED,oBAAOpB,OAAA,CAACF,KAAK;IAACuB,UAAU,EAAElB,eAAgB;IAACmB,EAAE,OAAC;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA8B,CAAC;AAC/E,CAAC;AAACC,EAAA,GA3CI1B,aAAa;AA6CnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
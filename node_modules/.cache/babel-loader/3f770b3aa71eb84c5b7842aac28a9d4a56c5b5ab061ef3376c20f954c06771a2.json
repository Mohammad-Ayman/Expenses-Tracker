{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\react\\\\first-app\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./style/Expenses.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState(\"All\");\n  const FilterChangeHandler = selectedYear => {\n    console.log(selectedYear);\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = props.expensesData.filter(expense => expense.date.getFullYear().toString() === filteredYear);\n  let filteredExpenseItems = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Expenses found!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 30\n  }, this);\n  if (filteredYear === \"All\") {\n    filteredExpenseItems = props.expenseData.map(element => /*#__PURE__*/_jsxDEV(ExpenseItem\n    // key={element.id}\n    // key={indexes}\n    , {\n      title: element.title,\n      amount: element.amount,\n      date: element.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this));\n    // if (filteredYear === \"All\") {\n    //   filteredExpenseItems = props.expensesData.map((element) => (\n    //     <div key={element.id}>\n    //       <ExpenseItem\n    //         title={element.title}\n    //         amount={element.amount}\n    //         date={element.date}\n    //       />\n    //     </div>\n    //   ));\n  } else if (filteredExpenses.length) {\n    filteredExpenseItems = filteredExpenses.map((expenseData, indexes) => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      // key={indexes}\n      title: expenseData.title,\n      amount: expenseData.amount,\n      date: expenseData.date\n    }, expenseData.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this));\n  }\n\n  // let displayedExpenseItems = filteredExpenseItems;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        defaultYear: filteredYear,\n        onFilterChange: FilterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), filteredExpenseItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"PGn17XP2PftNZJhQR0iziugap6M=\");\n_c = Expenses;\nexport default Expenses;\n\n/*\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./style/Expenses.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst Expenses = (props) => {\r\n  const initialExpensesItems = props.expensesData.map(\r\n    (expenseData, indexes) => (\r\n      <ExpenseItem\r\n        key={expenseData.id}\r\n        // key={indexes}\r\n        title={expenseData.title}\r\n        amount={expenseData.amount}\r\n        date={expenseData.date}\r\n      />\r\n    )\r\n  );\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const [expenseItems, setExpenseItems] = useState(initialExpensesItems);\r\n\r\n  const FilterChangeHandler = (selectedYear) => {\r\n    console.log(selectedYear);\r\n    const filteredExpenses = props.expensesData.filter(\r\n      (expense) => expense.date.getFullYear().toString() === selectedYear\r\n    );\r\n    console.log(filteredExpenses);\r\n    setFilteredYear(selectedYear);\r\n    setExpenseItems(filteredExpenses);\r\n  };\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          defaultYear={filteredYear}\r\n          onFilterChange={FilterChangeHandler}\r\n        />\r\n        {expenseItems}\r\n        </Card>\r\n        </div>\r\n      );\r\n    };\r\n    \r\n    export default Expenses;\r\n    \r\n    \r\n*/\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["ExpenseItem","Card","ExpensesFilter","useState","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","FilterChangeHandler","selectedYear","console","log","filteredExpenses","expensesData","filter","expense","date","getFullYear","toString","filteredExpenseItems","children","fileName","_jsxFileName","lineNumber","columnNumber","expenseData","map","element","title","amount","length","indexes","id","className","defaultYear","onFilterChange","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/react/first-app/src/components/Expenses/Expenses.js"],"sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./style/Expenses.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"All\");\r\n\r\n  const FilterChangeHandler = (selectedYear) => {\r\n    console.log(selectedYear);\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = props.expensesData.filter(\r\n    (expense) => expense.date.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n  let filteredExpenseItems = <p>No Expenses found!</p>;\r\n  if (filteredYear === \"All\") {\r\n    filteredExpenseItems = props.expenseData.map((element) => (\r\n      <ExpenseItem\r\n        // key={element.id}\r\n        // key={indexes}\r\n        title={element.title}\r\n        amount={element.amount}\r\n        date={element.date}\r\n      /> \r\n    ));\r\n    // if (filteredYear === \"All\") {\r\n    //   filteredExpenseItems = props.expensesData.map((element) => (\r\n    //     <div key={element.id}>\r\n    //       <ExpenseItem\r\n    //         title={element.title}\r\n    //         amount={element.amount}\r\n    //         date={element.date}\r\n    //       />\r\n    //     </div>\r\n    //   ));\r\n  } else if (filteredExpenses.length) {\r\n    filteredExpenseItems = filteredExpenses.map((expenseData, indexes) => (\r\n      <ExpenseItem\r\n        key={expenseData.id}\r\n        // key={indexes}\r\n        title={expenseData.title}\r\n        amount={expenseData.amount}\r\n        date={expenseData.date}\r\n      />\r\n    ));\r\n  }\r\n\r\n  // let displayedExpenseItems = filteredExpenseItems;\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          defaultYear={filteredYear}\r\n          onFilterChange={FilterChangeHandler}\r\n        />\r\n        {filteredExpenseItems}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n\r\n/*\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./style/Expenses.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst Expenses = (props) => {\r\n  const initialExpensesItems = props.expensesData.map(\r\n    (expenseData, indexes) => (\r\n      <ExpenseItem\r\n        key={expenseData.id}\r\n        // key={indexes}\r\n        title={expenseData.title}\r\n        amount={expenseData.amount}\r\n        date={expenseData.date}\r\n      />\r\n    )\r\n  );\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const [expenseItems, setExpenseItems] = useState(initialExpensesItems);\r\n\r\n  const FilterChangeHandler = (selectedYear) => {\r\n    console.log(selectedYear);\r\n    const filteredExpenses = props.expensesData.filter(\r\n      (expense) => expense.date.getFullYear().toString() === selectedYear\r\n    );\r\n    console.log(filteredExpenses);\r\n    setFilteredYear(selectedYear);\r\n    setExpenseItems(filteredExpenses);\r\n  };\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          defaultYear={filteredYear}\r\n          onFilterChange={FilterChangeHandler}\r\n        />\r\n        {expenseItems}\r\n        </Card>\r\n        </div>\r\n      );\r\n    };\r\n    \r\n    export default Expenses;\r\n    \r\n    \r\n*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}